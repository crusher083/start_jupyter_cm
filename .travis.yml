language: python

addons:
  apt:
    packages:
    - nautilus
    - dolphin
    - caja
    - libglib2.0-bin
    - nemo

env:
  global:
    - TEST_DEPS="qtconsole notebook pytest"

matrix:
  include:
  - env: export PYTHON_VERSION=3.8
    python: 3.8
  - env: export PYTHON_VERSION=3.8; CONDA=true
  - env: export PYTHON_VERSION=3.6
    python: 3.6
  - env: export PYTHON_VERSION=3.6; CONDA=true
  - env: export PYTHON_VERSION=3.6
    python: 3.6
    addons:
      apt:
        packages:
        - nautilus
        - libglib2.0-bin


before_install:
  - mkdir -p ~/.local/share/nautilus/scripts/
  - |
    if [ $CONDA ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      chmod +x miniconda.sh
      ./miniconda.sh -b -p $HOME/miniconda
      hash -r
    fi

install:
  - |
    if [ $CONDA ]; then
      source $HOME/miniconda/bin/activate root
      conda update -yq conda
      conda create -n testenv --yes python=$PYTHON_VERSION
      source activate testenv
      conda install -y $TEST_DEPS
    else
      pip install $TEST_DEPS
    fi

  - pip install -e .

script:
  - pytest --pyargs start_jupyter_cm
  - start_jupyter_cm
  # display content of folder only if corresponding file manager is installed
  - if [ -x "$(command -v nautilus)" ]; then ls ~/.local/share/nautilus/scripts; fi
  - if [ -x "$(command -v dolphin)" ]; then ls ~/.local/share/kservices5/ServiceMenus; fi
  - if [ -x "$(command -v caja)" ]; then ls ~/.config/caja/scripts; fi
  - if [ -x "$(command -v nemo)" ]; then ls ~/.local/share/nemo/actions; fi
  - start_jupyter_cm --remove

after_failure:
  - gio --version
  - which gio
  - echo $PATH
